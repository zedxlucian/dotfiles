diff --git a/config.def.h b/config.def.h
index 1c0b587..78105ae 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,21 +1,31 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
-static const unsigned int snap      = 32;       /* snap pixel */
-static const int showbar            = 1;        /* 0 means no bar */
-static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
-static const char col_gray1[]       = "#222222";
-static const char col_gray2[]       = "#444444";
-static const char col_gray3[]       = "#bbbbbb";
-static const char col_gray4[]       = "#eeeeee";
-static const char col_cyan[]        = "#005577";
+static const unsigned int borderpx    = 2;        /* border pixel of windows */
+static const unsigned int snap        = 0;       /* snap pixel */
+static const unsigned int gappih      = 20;       /* horiz inner gap between windows */
+static const unsigned int gappiv      = 20;       /* vert inner gap between windows */
+static const unsigned int gappoh      = 23;       /* horiz outer gap between windows and screen edge */
+static const unsigned int gappov      = 23;       /* vert outer gap between windows and screen edge */
+static const int smartgaps            = 1;        /* 1 means no outer gap when there is only one window */
+static const int showbar              = 0;        /* 0 means no bar */
+static const int topbar               = 1;        /* 0 means bottom bar */
+static const char *fonts[]            = { "Arimo Nerd Font:size=12", "JoyPixels:pixelsize=10:antialias=true:autohint=true" };
+static const char dmenufont[]         = "Arimo Nerd Font:size=12";
+static const char col_dark_grey[]     = "#0f0f0f";
+static const char col_red[]           = "#ff009e";
+static const char col_white[]         = "#ffffff";
+static const unsigned int baralpha    = OPAQUE;
+static const unsigned int borderalpha = OPAQUE;
 static const char *colors[][3]      = {
-	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	/*               fg                  bg                   border   */
+	[SchemeNorm] = { col_white,          col_dark_grey,       col_dark_grey },
+	[SchemeSel]  = { col_red,            col_dark_grey,       col_white },
+};
+static const unsigned int alphas[][3]      = {
+	/*               fg      bg        border     */
+	[SchemeNorm] = { OPAQUE, baralpha, baralpha },
+	[SchemeSel]  = { OPAQUE, baralpha, OPAQUE },
 };
 
 /* tagging */
@@ -26,16 +36,16 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* class            instance         title      tags mask     iscentered   isfloating   monitor */
+	{ "firefox",        NULL,            NULL,      1 << 1,       0,           0,            0 },
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.5; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
-static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
+static const int resizehints = 0;    /* 1 means respect size hints in tiled resizals */
 
+#include "vanitygaps.c"
 static const Layout layouts[] = {
 	/* symbol     arrange function */
 	{ "[]=",      tile },    /* first entry is default */
@@ -44,7 +54,7 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -56,44 +66,59 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
-
+static const char *dmenucmd[] 		   = { "dmenu_run", NULL};
+static const char *termcmd[]               = { "st", NULL };
+static const char *browsercmd[]            = { "brave", NULL };
+static const char *powermenucmd[]          = { "powermenu", NULL };
+static const char *togglecompositorcmd[]   = { "togglecompositor", NULL };
+#include "movestack.c"
+#include "focusmaster.c"
+#include <X11/XF86keysym.h>
 static Key keys[] = {
-	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
-	{ MODKEY,                       XK_b,      togglebar,      {0} },
-	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
-	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
-	{ MODKEY,                       XK_i,      incnmaster,     {.i = +1 } },
-	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
-	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
-	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
-	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
-	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
-	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
-	{ MODKEY,                       XK_comma,  focusmon,       {.i = -1 } },
-	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
-	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
-	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
-	TAGKEYS(                        XK_1,                      0)
-	TAGKEYS(                        XK_2,                      1)
-	TAGKEYS(                        XK_3,                      2)
-	TAGKEYS(                        XK_4,                      3)
-	TAGKEYS(                        XK_5,                      4)
-	TAGKEYS(                        XK_6,                      5)
-	TAGKEYS(                        XK_7,                      6)
-	TAGKEYS(                        XK_8,                      7)
-	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	/* modifier                     key                         function        argument */
+	{ MODKEY,                       XK_d,                       spawn,          {.v = dmenucmd } },
+	{ MODKEY,             		XK_Return,                  spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_w,                       spawn,          {.v = browsercmd } },
+	{ MODKEY,                       XK_s,                       spawn,          {.v = powermenucmd } },
+	{ MODKEY,                       XK_c,                       spawn,          {.v = togglecompositorcmd } },
+	{ 0, 				XF86XK_AudioMute,	    spawn,          SHCMD("pamixer -t; kill -44 $(pidof dwmblocks)") },
+	{ 0, 				XF86XK_AudioRaiseVolume,    spawn,          SHCMD("pamixer --allow-boost -i 3; kill -44 $(pidof dwmblocks)") },
+	{ 0, 				XF86XK_AudioLowerVolume,    spawn,          SHCMD("pamixer --allow-boost -d 3; kill -44 $(pidof dwmblocks)") },
+	{ 0, 				XF86XK_MonBrightnessUp,	    spawn,          SHCMD("xbacklight -inc 15") },
+	{ 0, 				XF86XK_MonBrightnessDown,   spawn,          SHCMD("xbacklight -dec 15") },
+	{ MODKEY,                       XK_b,                       togglebar,      {0} },
+	{ MODKEY,                       XK_j,                       focusstack,     {.i = +1 } },
+	{ MODKEY,                       XK_k,                       focusstack,     {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_j,                       movestack,      {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_k,                       movestack,      {.i = -1 } },
+	{ MODKEY,                       XK_i,                       incnmaster,     {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_i,                       incnmaster,     {.i = -1 } },
+	{ MODKEY|ControlMask,           XK_h,                       setmfact,       {.f = -0.001} },
+	{ MODKEY|ControlMask,           XK_l,                       setmfact,       {.f = +0.001} },
+	{ MODKEY,                       XK_a,                       togglegaps,     {0} },
+	{ MODKEY,                       XK_Tab,                     focusmaster,    {0} },
+	{ MODKEY|ShiftMask,             XK_Return,                  zoom,           {0} },
+	{ MODKEY,                       XK_Escape,                  view,           {0} },
+	{ MODKEY,                       XK_q,                       killclient,     {0} },
+	{ MODKEY,                       XK_n,                       setlayout,      {.v = &layouts[0]} },
+	{ MODKEY,                       XK_m,                       setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_0,                       view,           {.ui = ~0 } },
+	{ MODKEY|ShiftMask,             XK_0,                       tag,            {.ui = ~0 } },
+	{ MODKEY,                       XK_h,                       focusmon,       {.i = -1 } },
+	{ MODKEY,                       XK_l,                       focusmon,       {.i = +1 } },
+	{ MODKEY|ShiftMask,             XK_h,                       tagmon,         {.i = -1 } },
+	{ MODKEY|ShiftMask,             XK_l,                       tagmon,         {.i = +1 } },
+	{ MODKEY,                       XK_period,                  setcentered,    {0} },
+	TAGKEYS(                        XK_ampersand,              		    0)
+	TAGKEYS(                        XK_eacute,                 		    1)
+	TAGKEYS(                        XK_quotedbl,                  		    2)
+	TAGKEYS(                        XK_apostrophe,             		    3)
+	TAGKEYS(                        XK_parenleft,              		    4)
+	TAGKEYS(                        XK_minus,                  		    5)
+	TAGKEYS(                        XK_egrave,                 		    6)
+	TAGKEYS(                        XK_underscore,             		    7)
+	TAGKEYS(                        XK_ccedilla,               		    8)
+	{ MODKEY|ShiftMask,             XK_q,                       quit,           {0} },
 };
 
 /* button definitions */
diff --git a/drw.c b/drw.c
index 4cdbcbe..8fd1ca4 100644
--- a/drw.c
+++ b/drw.c
@@ -95,7 +95,6 @@ drw_free(Drw *drw)
 {
 	XFreePixmap(drw->dpy, drw->drawable);
 	XFreeGC(drw->dpy, drw->gc);
-	drw_fontset_free(drw->fonts);
 	free(drw);
 }
 
